
package models;
/**
* Java Course 4 Capstone
*
* @author John Russel Sauli
* @Description:  A simple Automobile Insurance Policy and 
* 				Claims Administration system (PAS) will be created
* 			    to manage customer automobile insurance policies 
* 				and as well as accident claims for an insurance company. 
* Created Date: 6/28/2022
* Modified Date:7/1/2022
* @Modified By: John Russel Sauli
*
*/

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import databaseConnection.DBConnection;



public class Policy extends PolicyHolder implements DatabaseFunctions  {

	

	DBConnection connection = new DBConnection();

	private int policyID;
	private int policyHolderID;
	private String policyNumber;
	private String effectiveDate;
	private String expirationDate;
	private double premiumCharge;
	private int isClaimed;
	private int isExpired;

	public Policy() {}
	
	
	public Policy(int policyID, int policyHolderID, String policyNumber, String effectiveDate,String expirationDate, double premiumCharge, int isClaimed, int isExpired) {
		
		this.policyHolderID = policyHolderID;
		this.policyNumber = policyNumber;
		this.effectiveDate = effectiveDate;
		this.expirationDate = expirationDate;
		this.premiumCharge = premiumCharge;
		this.isClaimed = isClaimed;
		this.isExpired = isExpired;
	}



	@Override
	public void save(Object policy) {
		
		try {

			Connection dbConnection =connection.setConnection();

			String saveData = "INSERT INTO policy (policy_number, effective_date, expiration_date,policy_holderID,premium,IsClaim,isExpired)VALUES (?,?,?,?,?,?,?)";

			PreparedStatement preparedStatement = dbConnection.prepareStatement(saveData,Statement.RETURN_GENERATED_KEYS);	// return the generated policyID when insert
			preparedStatement.setString(1, policyNumber);
			preparedStatement.setString(2, effectiveDate);
			preparedStatement.setString(3, expirationDate);
			preparedStatement.setInt(4, policyHolderID);
			preparedStatement.setDouble(5, premiumCharge);
			preparedStatement.setInt(6, isClaimed);
			preparedStatement.setInt(7, isExpired);
			preparedStatement.executeUpdate();

			ResultSet resultSet = preparedStatement.getGeneratedKeys();	// fetch the generated policyID
			if (resultSet.next()) {
				this.setPolicyID(resultSet.getInt(1));	// get and set the value of generated poicyID to attribute policyJD in the class POlicy
			}
			
			dbConnection.close();
			
		} catch (SQLException e) {
			System.out.println(e);
		}
		
		
	}
	
	public ArrayList<Object> loadData() {
		
		Policy tempPolicy= new Policy();	// new object policyholder
		
		ArrayList<Object> listOfData = new ArrayList<Object>();	//arraylist of policyholder

		Connection dbConnection =connection.setConnection();	
		
		try {
			
			String loadData = "SELECT * FROM policy LEFT JOIN policy_holder ON policy.policy_holderID = policy_holder.policy_holderID  LEFT JOIN customer_account ON policy_holder.customer_accountID = customer_account.customer_accountID ";

			PreparedStatement preparedStatement = dbConnection.prepareStatement(loadData);

			ResultSet resultSet = preparedStatement.executeQuery();

			while (resultSet.next()) {	// loop the result set and set the value to the constructor 

				// set of value for new policyholder 
				
				tempPolicy= new Policy();
				
				
				tempPolicy.setPolicyHolderID(resultSet.getInt("policy_holderID"));
				tempPolicy.setFirstNamePH(resultSet.getString("policy_holder.first_name"));
				tempPolicy.setLastNamePH(resultSet.getString("policy_holder.last_name"));
				tempPolicy.setAddressPH(resultSet.getString("policy_holder.address"));
				tempPolicy.setBirthDate(resultSet.getString("birth_date"));
				tempPolicy.setDriversLicence(resultSet.getString("license_number"));
				tempPolicy.setDriversLicenseIssued(resultSet.getString("license_number_issue"));
				tempPolicy.setCustomerAccountID(resultSet.getInt("policy_holder.customer_accountID"));
				
				tempPolicy.setAccountNumber(resultSet.getString("account_number"));
				tempPolicy.setFirstName(resultSet.getString("first_name"));
				tempPolicy.setLastName(resultSet.getString("last_name"));
				tempPolicy.setAddress(resultSet.getString("address"));
				
				
				tempPolicy.setPolicyID(resultSet.getInt("policyID"));
				tempPolicy.setPolicyNumber(resultSet.getString("policy_number"));
				tempPolicy.setEffectiveDate(resultSet.getString("effective_date"));
				tempPolicy.setExpirationDate(resultSet.getString("expiration_date"));
				tempPolicy.setPremiumCharge(resultSet.getDouble("premium"));
				tempPolicy.setPolicyHolderID(resultSet.getInt("policy_holderID"));
				tempPolicy.setIsClaimed(resultSet.getInt("isClaimed"));
				tempPolicy.setIsExpired(resultSet.getInt("isExpired"));
				
				
				
            	
            	listOfData.add(tempPolicy);		// add a new data to the list
			}

			dbConnection.close();	// connection close

		} catch (SQLException e) {
			
			System.out.println(e);
		}

		return listOfData;
		
	}
	
	
	
	
	
	// getters and setters
	public void cancelpolicy() {
	}

	public int getPolicyID() {
		return policyID;
	}

	public void setPolicyID(int policyID) {
		this.policyID = policyID;
	}

	public int getPolicyHolderID() {
		return policyHolderID;
	}

	public void setPolicyHolderID(int policyHolderID) {
		this.policyHolderID = policyHolderID;
	}

	public String getPolicyNumber() {
		return policyNumber;
	}

	public void setPolicyNumber(String policyNumber) {
		this.policyNumber = policyNumber;
	}

	public String getEffectiveDate() {
		return effectiveDate;
	}

	public void setEffectiveDate(String effectiveDate) {
		this.effectiveDate = effectiveDate;
	}

	public String getExpirationDate() {
		return expirationDate;
	}

	public void setExpirationDate(String expirationDate) {
		this.expirationDate = expirationDate;
	}

	public double getPremiumCharge() {
		return premiumCharge;
	}

	public void setPremiumCharge(double premiumCharge) {
		this.premiumCharge = premiumCharge;
	}

	public int getIsClaimed() {
		return isClaimed;
	}

	public void setIsClaimed(int isClaimed) {
		this.isClaimed = isClaimed;
	}

	public int getIsExpired() {
		return isExpired;
	}

	public void setIsExpired(int isExpired) {
		this.isExpired = isExpired;
	}

}
